{"version":3,"sources":["webpack:///src/app/navigationpages/blog/dev/developer-blog.module.ts.pre-build-optimizer.js","webpack:///src/app/navigationpages/blog/dev/developer-blog.module.ts","webpack:///src/app/navigationpages/blog/dev/developer-blog.component.ngfactory.js.pre-build-optimizer.js","webpack:///src/app/navigationpages/blog/dev/developer-blog.component.html","webpack:///src/app/shared/blog-post/blog-post.component.ts","webpack:///src/app/shared/blog-post/blog-post.component.ngfactory.js.pre-build-optimizer.js","webpack:///src/app/shared/blog-post/blog-post.component.html","webpack:///src/app/navigationpages/blog/dev/post/rs-hs.component.ngfactory.js.pre-build-optimizer.js","webpack:///src/app/navigationpages/blog/dev/post/rs-hs.component.html","webpack:///src/app/navigationpages/blog/dev/developer-blog.module.ngfactory.js.pre-build-optimizer.js"],"names":["Éµ0","developer_blog_routing_module","a","DeveloperBlogModule","RenderType_DeveloperBlogComponent","core","nb","encapsulation","styles","data","View_DeveloperBlogComponent_0","_l","Lb","pb","blog_overview_component_ngfactory","b","ob","blog_overview_component","router","l","blogTitle","blogPosts","_ck","_v","_co","component","posts","View_DeveloperBlogComponent_Host_0","developer_blog_component","DeveloperBlogComponentNgFactory","lb","mailtoLink","__webpack_require__","BlogPostComponent","[object Object]","document","this","postImageName","postTitle","location","href","to","subject","mailSubject","body","mailBody","RenderType_BlogPostComponent","View_BlogPostComponent_1","tb","View_BlogPostComponent_0","Db","common","e","s","Jb","eb","m","M","J","ngIf","Fb","en","$event","ad","Bb","onClick","button","ctrlKey","metaKey","shiftKey","o","j","routerLink","Cb","Ab","onSubmit","onReset","fesm2015_forms","ngSubmit","Gb","i","_handleInput","target","value","onTouched","_compositionStart","_compositionEnd","c","B","k","f","p0_0","name","model","g","h","required","update","blog_sidebar_component_ngfactory","blog_sidebar_component","postImagePresent","currVal_5","currVal_2","Kb","postDate","postAbstract","ngClassUntouched","ngClassTouched","ngClassPristine","ngClassDirty","ngClassValid","ngClassInvalid","ngClassPending","RenderType_RsHsComponent","View_RsHsComponent_0","d","ngx_highlightjs","code","View_RsHsComponent_Host_0","rs_hs_component","RsHsComponentNgFactory","__webpack_exports__","DeveloperBlogModuleNgFactory","mb","yb","zb","X","router_ngfactory","v","n","y","p","u","blog_sidebar_category_module","blog_sidebar_search_module","blog_sidebar_module","blog_overview_module","blog_post_module","shared_module","path"],"mappings":"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","file":"10-es2015.72a71c399ef5bc2b5767.js","sourcesContent":["import { DEV_BLOG_ROUTES } from './developer-blog-routing.module';\nconst Éµ0 = DEV_BLOG_ROUTES;\nexport class DeveloperBlogModule {\n}\nexport { Éµ0 };\n","import {NgModule} from '@angular/core';\r\n\r\nimport {SharedModule} from '../../../shared/shared.module';\r\nimport {DeveloperBlogRoutingModule, DEV_BLOG_ROUTES} from './developer-blog-routing.module';\r\nimport {DeveloperBlogComponent} from './developer-blog.component';\r\nimport {GraphqlComponent} from './post/graphql.component';\r\nimport {ReactiveSpringComponent} from './post/reactive-spring.component';\r\nimport {MongodbComponent} from './post/mongodb.component';\r\nimport {SpringBootWebAppComponent} from './post/spring-boot-web-app.component';\r\nimport {RsHsComponent} from './post/rs-hs.component';\r\nimport {HighlightModule} from 'ngx-highlightjs';\r\n\r\n@NgModule({\r\n    imports: [SharedModule, DeveloperBlogRoutingModule, HighlightModule],\r\n    exports: [DeveloperBlogComponent, GraphqlComponent, RsHsComponent, ReactiveSpringComponent, MongodbComponent,\r\n        SpringBootWebAppComponent],\r\n    declarations: [DeveloperBlogRoutingModule.components],\r\n    providers: [{provide: 'DEV_ROUTES', useValue: DEV_BLOG_ROUTES}]\r\n})\r\nexport class DeveloperBlogModule {\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../shared/blog-overview/blog-overview.component.ngfactory\";\nimport * as i2 from \"../../../shared/blog-overview/blog-overview.component\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./developer-blog.component\";\nvar styles_DeveloperBlogComponent = [];\nvar RenderType_DeveloperBlogComponent = i0.Éµcrt({ encapsulation: 2, styles: styles_DeveloperBlogComponent, data: {} });\nexport { RenderType_DeveloperBlogComponent as RenderType_DeveloperBlogComponent };\nexport function View_DeveloperBlogComponent_0(_l) { return i0.Éµvid(0, [(_l()(), i0.Éµeld(0, 0, null, null, 2, \"div\", [[\"class\", \"container clearfix\"]], null, null, null, null, null)), (_l()(), i0.Éµeld(1, 0, null, null, 1, \"app-blog-overview\", [], null, null, null, i1.View_BlogOverviewComponent_0, i1.RenderType_BlogOverviewComponent)), i0.Éµdid(2, 114688, null, 0, i2.BlogOverviewComponent, [i3.ActivatedRoute, i3.Router], { blogTitle: [0, \"blogTitle\"], blogPosts: [1, \"blogPosts\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.blogTitle; var currVal_1 = _co.posts; _ck(_v, 2, 0, currVal_0, currVal_1); }, null); }\nexport function View_DeveloperBlogComponent_Host_0(_l) { return i0.Éµvid(0, [(_l()(), i0.Éµeld(0, 0, null, null, 1, \"app-developer-blog\", [], null, null, null, View_DeveloperBlogComponent_0, RenderType_DeveloperBlogComponent)), i0.Éµdid(1, 114688, null, 0, i4.DeveloperBlogComponent, [\"DEV_ROUTES\"], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar DeveloperBlogComponentNgFactory = i0.Éµccf(\"app-developer-blog\", i4.DeveloperBlogComponent, View_DeveloperBlogComponent_Host_0, {}, {}, []);\nexport { DeveloperBlogComponentNgFactory as DeveloperBlogComponentNgFactory };\n","<div class=\"container clearfix\">\r\n    <app-blog-overview\r\n        [blogTitle]=\"blogTitle\"\r\n        [blogPosts]=\"posts\">\r\n    </app-blog-overview>\r\n</div>\r\n","'use strict';\r\nimport {Component, Inject, Input} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\nconst mailtoLink = require('mailto-link');\r\n\r\n@Component({\r\n    selector: 'app-blog-post',\r\n    templateUrl: './blog-post.component.html'\r\n})\r\nexport class BlogPostComponent {\r\n\r\n    @Input() postTitle: string;\r\n    @Input() postDate: Date;\r\n    @Input() postAbstract: string;\r\n    @Input() postImageName: string;\r\n\r\n    mailBody: string;\r\n\r\n    constructor(@Inject(DOCUMENT) private document: Document) {}\r\n\r\n    postImagePresent(): boolean {\r\n        return this.postImageName && this.postImageName !== '';\r\n    }\r\n\r\n    mailSubject(): string {\r\n        return 'Comment - ' + this.postTitle;\r\n    }\r\n\r\n    onSubmit(): void {\r\n        this.document.location.href = mailtoLink({\r\n            to: 'alexanderghtang@gmail.com',\r\n            subject: this.mailSubject(),\r\n            body: this.mailBody\r\n        });\r\n    }\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../blog-sidebar/blog-sidebar.component.ngfactory\";\nimport * as i5 from \"../blog-sidebar/blog-sidebar.component\";\nimport * as i6 from \"./blog-post.component\";\nvar styles_BlogPostComponent = [];\nvar RenderType_BlogPostComponent = i0.Éµcrt({ encapsulation: 2, styles: styles_BlogPostComponent, data: {} });\nexport { RenderType_BlogPostComponent as RenderType_BlogPostComponent };\nfunction View_BlogPostComponent_1(_l) { return i0.Éµvid(0, [(_l()(), i0.Éµeld(0, 0, null, null, 2, \"div\", [], null, null, null, null, null)), (_l()(), i0.Éµeld(1, 0, null, null, 0, \"img\", [[\"alt\", \"\"], [\"class\", \"img-fluid rounded\"]], [[8, \"src\", 4]], null, null, null, null)), (_l()(), i0.Éµeld(2, 0, null, null, 0, \"hr\", [], null, null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ÉµinlineInterpolate(1, \"assets/images/\", _co.postImageName, \"\"); _ck(_v, 1, 0, currVal_0); }); }\nexport function View_BlogPostComponent_0(_l) { return i0.Éµvid(0, [i0.Éµpid(0, i1.DatePipe, [i0.LOCALE_ID]), (_l()(), i0.Éµeld(1, 0, null, null, 50, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i0.Éµeld(2, 0, null, null, 1, \"h2\", [[\"class\", \"mt-4 mb-3\"]], null, null, null, null, null)), (_l()(), i0.Éµted(3, null, [\"\", \"\"])), (_l()(), i0.Éµeld(4, 0, null, null, 47, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i0.Éµeld(5, 0, null, null, 43, \"div\", [[\"class\", \"col-lg-9\"]], null, null, null, null, null)), (_l()(), i0.Éµand(16777216, null, null, 1, null, View_BlogPostComponent_1)), i0.Éµdid(7, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.Éµeld(8, 0, null, null, 6, \"p\", [], null, null, null, null, null)), (_l()(), i0.Éµted(9, null, [\"Posted on \", \" by \"])), i0.Éµppd(10, 2), (_l()(), i0.Éµeld(11, 0, null, null, 3, \"a\", [], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i0.Éµnov(_v, 12).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.Éµdid(12, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i1.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), i0.Éµpad(13, 1), (_l()(), i0.Éµted(-1, null, [\"Alexander Tang\"])), (_l()(), i0.Éµeld(15, 0, null, null, 0, \"hr\", [], null, null, null, null, null)), (_l()(), i0.Éµeld(16, 0, null, null, 3, \"p\", [[\"class\", \"lead\"]], null, null, null, null, null)), (_l()(), i0.Éµeld(17, 0, null, null, 2, \"b\", [], null, null, null, null, null)), (_l()(), i0.Éµeld(18, 0, null, null, 1, \"i\", [], null, null, null, null, null)), (_l()(), i0.Éµted(19, null, [\"\", \"\"])), i0.Éµncd(null, 0), (_l()(), i0.Éµeld(21, 0, null, null, 0, \"hr\", [], null, null, null, null, null)), (_l()(), i0.Éµeld(22, 0, null, null, 26, \"div\", [[\"class\", \"card my-4\"]], null, null, null, null, null)), (_l()(), i0.Éµeld(23, 0, null, null, 1, \"h5\", [[\"class\", \"card-header\"]], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"E-mail a comment:\"])), (_l()(), i0.Éµeld(25, 0, null, null, 23, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i0.Éµeld(26, 0, null, null, 22, \"form\", [[\"novalidate\", \"\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"ngSubmit\"], [null, \"submit\"], [null, \"reset\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"submit\" === en)) {\n        var pd_0 = (i0.Éµnov(_v, 28).onSubmit($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"reset\" === en)) {\n        var pd_1 = (i0.Éµnov(_v, 28).onReset() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"ngSubmit\" === en)) {\n        var pd_2 = (_co.onSubmit() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i0.Éµdid(27, 16384, null, 0, i3.Éµangular_packages_forms_forms_z, [], null, null), i0.Éµdid(28, 4210688, [[\"blogPostCommentForm\", 4]], 0, i3.NgForm, [[8, null], [8, null]], null, { ngSubmit: \"ngSubmit\" }), i0.Éµprd(2048, null, i3.ControlContainer, null, [i3.NgForm]), i0.Éµdid(30, 16384, null, 0, i3.NgControlStatusGroup, [[4, i3.ControlContainer]], null, null), (_l()(), i0.Éµeld(31, 0, null, null, 6, \"div\", [[\"class\", \"form-group\"]], null, null, null, null, null)), (_l()(), i0.Éµeld(32, 0, null, null, 5, \"input\", [[\"class\", \"form-control\"], [\"id\", \"mailTitle\"], [\"name\", \"mailTitle\"], [\"type\", \"text\"]], [[8, \"readOnly\", 0], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"input\"], [null, \"blur\"], [null, \"compositionstart\"], [null, \"compositionend\"]], function (_v, en, $event) { var ad = true; if ((\"input\" === en)) {\n        var pd_0 = (i0.Éµnov(_v, 33)._handleInput($event.target.value) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_1 = (i0.Éµnov(_v, 33).onTouched() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"compositionstart\" === en)) {\n        var pd_2 = (i0.Éµnov(_v, 33)._compositionStart() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"compositionend\" === en)) {\n        var pd_3 = (i0.Éµnov(_v, 33)._compositionEnd($event.target.value) !== false);\n        ad = (pd_3 && ad);\n    } return ad; }, null, null)), i0.Éµdid(33, 16384, null, 0, i3.DefaultValueAccessor, [i0.Renderer2, i0.ElementRef, [2, i3.COMPOSITION_BUFFER_MODE]], null, null), i0.Éµprd(1024, null, i3.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i3.DefaultValueAccessor]), i0.Éµdid(35, 671744, null, 0, i3.NgModel, [[2, i3.ControlContainer], [8, null], [8, null], [6, i3.NG_VALUE_ACCESSOR]], { name: [0, \"name\"], model: [1, \"model\"] }, null), i0.Éµprd(2048, null, i3.NgControl, null, [i3.NgModel]), i0.Éµdid(37, 16384, null, 0, i3.NgControlStatus, [[4, i3.NgControl]], null, null), (_l()(), i0.Éµeld(38, 0, null, null, 8, \"div\", [[\"class\", \"form-group\"]], null, null, null, null, null)), (_l()(), i0.Éµeld(39, 0, null, null, 7, \"textarea\", [[\"class\", \"form-control\"], [\"id\", \"mailBody\"], [\"name\", \"mailBody\"], [\"required\", \"\"], [\"rows\", \"3\"]], [[1, \"required\", 0], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"ngModelChange\"], [null, \"input\"], [null, \"blur\"], [null, \"compositionstart\"], [null, \"compositionend\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"input\" === en)) {\n        var pd_0 = (i0.Éµnov(_v, 40)._handleInput($event.target.value) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_1 = (i0.Éµnov(_v, 40).onTouched() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"compositionstart\" === en)) {\n        var pd_2 = (i0.Éµnov(_v, 40)._compositionStart() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"compositionend\" === en)) {\n        var pd_3 = (i0.Éµnov(_v, 40)._compositionEnd($event.target.value) !== false);\n        ad = (pd_3 && ad);\n    } if ((\"ngModelChange\" === en)) {\n        var pd_4 = ((_co.mailBody = $event) !== false);\n        ad = (pd_4 && ad);\n    } return ad; }, null, null)), i0.Éµdid(40, 16384, null, 0, i3.DefaultValueAccessor, [i0.Renderer2, i0.ElementRef, [2, i3.COMPOSITION_BUFFER_MODE]], null, null), i0.Éµdid(41, 16384, null, 0, i3.RequiredValidator, [], { required: [0, \"required\"] }, null), i0.Éµprd(1024, null, i3.NG_VALIDATORS, function (p0_0) { return [p0_0]; }, [i3.RequiredValidator]), i0.Éµprd(1024, null, i3.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i3.DefaultValueAccessor]), i0.Éµdid(44, 671744, null, 0, i3.NgModel, [[2, i3.ControlContainer], [6, i3.NG_VALIDATORS], [8, null], [6, i3.NG_VALUE_ACCESSOR]], { name: [0, \"name\"], model: [1, \"model\"] }, { update: \"ngModelChange\" }), i0.Éµprd(2048, null, i3.NgControl, null, [i3.NgModel]), i0.Éµdid(46, 16384, null, 0, i3.NgControlStatus, [[4, i3.NgControl]], null, null), (_l()(), i0.Éµeld(47, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-primary\"], [\"type\", \"submit\"]], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"Submit\"])), (_l()(), i0.Éµeld(49, 0, null, null, 2, \"div\", [[\"class\", \"col-md-3\"]], null, null, null, null, null)), (_l()(), i0.Éµeld(50, 0, null, null, 1, \"app-blog-sidebar\", [], null, null, null, i4.View_BlogSidebarComponent_0, i4.RenderType_BlogSidebarComponent)), i0.Éµdid(51, 49152, null, 0, i5.BlogSidebarComponent, [], null, null)], function (_ck, _v) { var _co = _v.component; var currVal_1 = _co.postImagePresent(); _ck(_v, 7, 0, currVal_1); var currVal_5 = _ck(_v, 13, 0, \"/about\"); _ck(_v, 12, 0, currVal_5); var currVal_22 = \"mailTitle\"; var currVal_23 = _co.mailSubject(); _ck(_v, 35, 0, currVal_22, currVal_23); var currVal_32 = \"\"; _ck(_v, 41, 0, currVal_32); var currVal_33 = \"mailBody\"; var currVal_34 = _co.mailBody; _ck(_v, 44, 0, currVal_33, currVal_34); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.postTitle; _ck(_v, 3, 0, currVal_0); var currVal_2 = i0.Éµunv(_v, 9, 0, _ck(_v, 10, 0, i0.Éµnov(_v, 0), _co.postDate, \"longDate\")); _ck(_v, 9, 0, currVal_2); var currVal_3 = i0.Éµnov(_v, 12).target; var currVal_4 = i0.Éµnov(_v, 12).href; _ck(_v, 11, 0, currVal_3, currVal_4); var currVal_6 = _co.postAbstract; _ck(_v, 19, 0, currVal_6); var currVal_7 = i0.Éµnov(_v, 30).ngClassUntouched; var currVal_8 = i0.Éµnov(_v, 30).ngClassTouched; var currVal_9 = i0.Éµnov(_v, 30).ngClassPristine; var currVal_10 = i0.Éµnov(_v, 30).ngClassDirty; var currVal_11 = i0.Éµnov(_v, 30).ngClassValid; var currVal_12 = i0.Éµnov(_v, 30).ngClassInvalid; var currVal_13 = i0.Éµnov(_v, 30).ngClassPending; _ck(_v, 26, 0, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13); var currVal_14 = true; var currVal_15 = i0.Éµnov(_v, 37).ngClassUntouched; var currVal_16 = i0.Éµnov(_v, 37).ngClassTouched; var currVal_17 = i0.Éµnov(_v, 37).ngClassPristine; var currVal_18 = i0.Éµnov(_v, 37).ngClassDirty; var currVal_19 = i0.Éµnov(_v, 37).ngClassValid; var currVal_20 = i0.Éµnov(_v, 37).ngClassInvalid; var currVal_21 = i0.Éµnov(_v, 37).ngClassPending; _ck(_v, 32, 0, currVal_14, currVal_15, currVal_16, currVal_17, currVal_18, currVal_19, currVal_20, currVal_21); var currVal_24 = (i0.Éµnov(_v, 41).required ? \"\" : null); var currVal_25 = i0.Éµnov(_v, 46).ngClassUntouched; var currVal_26 = i0.Éµnov(_v, 46).ngClassTouched; var currVal_27 = i0.Éµnov(_v, 46).ngClassPristine; var currVal_28 = i0.Éµnov(_v, 46).ngClassDirty; var currVal_29 = i0.Éµnov(_v, 46).ngClassValid; var currVal_30 = i0.Éµnov(_v, 46).ngClassInvalid; var currVal_31 = i0.Éµnov(_v, 46).ngClassPending; _ck(_v, 39, 0, currVal_24, currVal_25, currVal_26, currVal_27, currVal_28, currVal_29, currVal_30, currVal_31); }); }\nexport function View_BlogPostComponent_Host_0(_l) { return i0.Éµvid(0, [(_l()(), i0.Éµeld(0, 0, null, null, 1, \"app-blog-post\", [], null, null, null, View_BlogPostComponent_0, RenderType_BlogPostComponent)), i0.Éµdid(1, 49152, null, 0, i6.BlogPostComponent, [i1.DOCUMENT], null, null)], null, null); }\nvar BlogPostComponentNgFactory = i0.Éµccf(\"app-blog-post\", i6.BlogPostComponent, View_BlogPostComponent_Host_0, { postTitle: \"postTitle\", postDate: \"postDate\", postAbstract: \"postAbstract\", postImageName: \"postImageName\" }, {}, [\"*\"]);\nexport { BlogPostComponentNgFactory as BlogPostComponentNgFactory };\n","<div class=\"container\">\r\n\r\n    <h2 class=\"mt-4 mb-3\">{{postTitle}}</h2>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-9\">\r\n            <div *ngIf=\"postImagePresent()\">\r\n                <img class=\"img-fluid rounded\" src=\"assets/images/{{postImageName}}\" alt=\"\">\r\n                <hr>\r\n            </div>\r\n            <p>Posted on {{postDate | date:'longDate'}} by <a [routerLink]=\"['/about']\">Alexander Tang</a></p>\r\n            <hr>\r\n            <p class=\"lead\"><b><i>{{postAbstract}}</i></b></p>\r\n            <ng-content></ng-content>\r\n            <hr>\r\n\r\n            <div class=\"card my-4\">\r\n                <h5 class=\"card-header\">E-mail a comment:</h5>\r\n                <div class=\"card-body\">\r\n                    <form (ngSubmit)=\"onSubmit()\" #blogPostCommentForm=\"ngForm\">\r\n                        <div class=\"form-group\">\r\n                            <input id=\"mailTitle\"\r\n                                   name=\"mailTitle\"\r\n                                   type=\"text\"\r\n                                   [ngModel]=\"mailSubject()\"\r\n                                   [readonly]=\"true\"\r\n                                   class=\"form-control\">\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <textarea id=\"mailBody\"\r\n                                      name=\"mailBody\"\r\n                                      [(ngModel)]=\"mailBody\"\r\n                                      class=\"form-control\"\r\n                                      rows=\"3\"\r\n                                      required></textarea>\r\n                        </div>\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-3\">\r\n            <app-blog-sidebar></app-blog-sidebar>\r\n        </div>\r\n    </div>\r\n</div>\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../shared/blog-post/blog-post.component.ngfactory\";\nimport * as i2 from \"../../../../shared/blog-post/blog-post.component\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ngx-highlightjs\";\nimport * as i5 from \"./rs-hs.component\";\nvar styles_RsHsComponent = [];\nvar RenderType_RsHsComponent = i0.Éµcrt({ encapsulation: 2, styles: styles_RsHsComponent, data: {} });\nexport { RenderType_RsHsComponent as RenderType_RsHsComponent };\nexport function View_RsHsComponent_0(_l) { return i0.Éµvid(0, [(_l()(), i0.Éµeld(0, 0, null, null, 86, \"app-blog-post\", [], null, null, null, i1.View_BlogPostComponent_0, i1.RenderType_BlogPostComponent)), i0.Éµdid(1, 49152, null, 0, i2.BlogPostComponent, [i3.DOCUMENT], { postTitle: [0, \"postTitle\"], postDate: [1, \"postDate\"], postAbstract: [2, \"postAbstract\"] }, null), (_l()(), i0.Éµeld(2, 0, null, 0, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"RSA and HMAC are cryptographic algorithms that can scramble data into something indecipherable. This article will highlight how they work, what their differences are and some use cases in which to use them without delving into the mathematical aspects.\"])), (_l()(), i0.Éµeld(4, 0, null, 0, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"RSA\"])), (_l()(), i0.Éµeld(6, 0, null, 0, 4, \"p\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"RSA is an asymmetric algorithm that uses a public and private key pair. As the names suggest, the private key is kept secret from most parties while the public key is public for everyone to use. The following shows an example with RS512, generated \"])), (_l()(), i0.Éµeld(8, 0, null, null, 1, \"a\", [[\"href\", \"https://travistidwell.com/jsencrypt/demo/\"]], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"online\"])), (_l()(), i0.Éµted(-1, null, [\":\"])), (_l()(), i0.Éµeld(11, 0, null, 0, 10, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i0.Éµeld(12, 0, null, null, 4, \"div\", [[\"class\", \"col-8\"]], null, null, null, null, null)), (_l()(), i0.Éµeld(13, 0, null, null, 3, \"pre\", [], null, null, null, null, null)), (_l()(), i0.Éµeld(14, 0, null, null, 2, \"code\", [], [[2, \"hljs\", null]], null, null, null, null)), i0.Éµdid(15, 540672, null, 0, i4.Highlight, [i0.ElementRef, i4.HighlightJS, [2, i4.HIGHLIGHT_OPTIONS]], { code: [0, \"code\"] }, null), (_l()(), i0.Éµted(-1, null, [\"\\n    \"])), (_l()(), i0.Éµeld(17, 0, null, null, 4, \"div\", [[\"class\", \"col-4\"]], null, null, null, null, null)), (_l()(), i0.Éµeld(18, 0, null, null, 3, \"pre\", [], null, null, null, null, null)), (_l()(), i0.Éµeld(19, 0, null, null, 2, \"code\", [], [[2, \"hljs\", null]], null, null, null, null)), i0.Éµdid(20, 540672, null, 0, i4.Highlight, [i0.ElementRef, i4.HighlightJS, [2, i4.HIGHLIGHT_OPTIONS]], { code: [0, \"code\"] }, null), (_l()(), i0.Éµted(-1, null, [\"\\n    \"])), (_l()(), i0.Éµeld(22, 0, null, 0, 2, \"p\", [], null, null, null, null, null)), (_l()(), i0.Éµeld(23, 0, null, null, 1, \"i\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"I strongly advise against using online tools to generate public/private keys for use in production!\"])), (_l()(), i0.Éµeld(25, 0, null, 0, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"The public key can be used to encrypt a message which the private key can decrypt. The inverse also works: private key for encryption and public key for decryption! This is confusing for some because RSA is an asymmetric algorithm, but the meaning of an asymmetric algorithm is interpreted the wrong way. RSA is asymmetric because different keys are used for encryption and decryption, as opposed to symmetric algorithms where the same key is used. The bidirectional encryption/decryption allows RSA to be used in different scenarios. Let's see:\"])), (_l()(), i0.Éµeld(27, 0, null, 0, 1, \"h5\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"Encryption\"])), (_l()(), i0.Éµeld(29, 0, null, 0, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"RSA can be used for encryption of data. Take for example a server which clients can make requests to. Anyone can communicate with the server, but the messages may contain sensitive data such as passwords. Man-in-the-middle-attacks may intercept ongoing network traffic, so the data should be indecipherable by everyone except the intended recipient which is the server. The server can generate a public/private key pair to solve this problem.\"])), (_l()(), i0.Éµeld(31, 0, null, 0, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"The public key gets distributed to anyone accessing the server. Visitors encrypt their data with the public key and send it to the server. The server uses the private key to decrypt the message and access the contents. Even if a third party managed to intercept the message over the network, it is useless without the private key to restore the original data.\"])), (_l()(), i0.Éµeld(33, 0, null, 0, 5, \"figure\", [], null, null, null, null, null)), (_l()(), i0.Éµeld(34, 0, null, null, 0, \"img\", [[\"alt\", \"\"], [\"class\", \"img-fluid rounded width--7\"], [\"src\", \"assets/images/rsa_public_private_key.png\"]], null, null, null, null, null)), (_l()(), i0.Éµeld(35, 0, null, null, 3, \"figcaption\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"Public/private key encryption \"])), (_l()(), i0.Éµeld(37, 0, null, null, 1, \"small\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"- source: twilio.com\"])), (_l()(), i0.Éµeld(39, 0, null, 0, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"Using another example, say two people wish to communicate with each other using encrypted messages. Both parties can generate their own public/private key pairs and exchange public keys. This achieves the same situation as the server/client example, except this time they are both the sender and receiver of messages. Person A uses the public key of person B to encrypt data and send them to person B. Person B uses his own private key to decrypt the message sent by person A. In this transaction only the public/private key pair of person B is involved. The same reasoning holds when person B becomes the sender, by using person A's public/private key pair.\"])), (_l()(), i0.Éµeld(41, 0, null, 0, 1, \"h5\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"Authenticity validation\"])), (_l()(), i0.Éµeld(43, 0, null, 0, 4, \"p\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"RSA is not only useful for encryption, but it can also be used for validating the authenticity of a message. The intent is very different from the encryption of data in the previous examples. In this case everyone is authorized to view the message contents, but they are not allowed to \"])), (_l()(), i0.Éµeld(45, 0, null, null, 1, \"i\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"modify\"])), (_l()(), i0.Éµted(-1, null, [\" it.\"])), (_l()(), i0.Éµeld(48, 0, null, 0, 4, \"p\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"The private key is this time known only by the sender instead of the receiver, so the public/private key pair needs to be generated by the sender. The public key is again openly available to everyone else. The sender encrypts the message with the private key and attaches it to the original plain text message as a \"])), (_l()(), i0.Éµeld(50, 0, null, null, 1, \"i\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"signature\"])), (_l()(), i0.Éµted(-1, null, [\". Using the generated public/private key pair above, it will look something like this:\"])), (_l()(), i0.Éµeld(53, 0, null, 0, 5, \"figure\", [], null, null, null, null, null)), (_l()(), i0.Éµeld(54, 0, null, null, 0, \"img\", [[\"alt\", \"\"], [\"class\", \"img-fluid rounded width--8\"], [\"src\", \"assets/images/rsa_signature.png\"]], null, null, null, null, null)), (_l()(), i0.Éµeld(55, 0, null, null, 3, \"figcaption\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"Signature example using \"])), (_l()(), i0.Éµeld(57, 0, null, null, 1, \"a\", [[\"href\", \"https://8gwifi.org/RSAFunctionality?rsasignverifyfunctions=rsasignverifyfunctions&keysize=512\"]], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"online tool\"])), (_l()(), i0.Éµeld(59, 0, null, 0, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"Any modification made to the message will invalidate the accompanying signature. With the public key the invalid signature can be detected and the message deemed compromised.\"])), (_l()(), i0.Éµeld(61, 0, null, 0, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"HMAC\"])), (_l()(), i0.Éµeld(63, 0, null, 0, 4, \"p\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"HMAC is more simplistic in nature. There is just one (secret) key which is used to create a hash from a message, but there is no way to decrypt the hashed output to its original form. This makes HMAC unsuitable for the encryption of data. It is mainly used for authenticity validation by generating a hash from a message, which becomes the signature similar to RSA. The receiver of the message uses the \"])), (_l()(), i0.Éµeld(65, 0, null, null, 1, \"i\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"same\"])), (_l()(), i0.Éµted(-1, null, [\" key to generate a hash from the message contents and compares it with the accompanying signature. The authenticity of the message is preserved when the hash matches the signature.\"])), (_l()(), i0.Éµeld(68, 0, null, 0, 4, \"p\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"Since the receiver needs the key to validate the signature, special care must be taken to ensure it does not fall in the hands of any third parties. If the key gets stolen then the attacker can modify the message contents and use the key to generate a new and \"])), (_l()(), i0.Éµeld(70, 0, null, null, 1, \"b\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"valid\"])), (_l()(), i0.Éµted(-1, null, [\" signature.\"])), (_l()(), i0.Éµeld(73, 0, null, 0, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"Comparison RSA and HMAC\"])), (_l()(), i0.Éµeld(75, 0, null, 0, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"One may believe that RSA is the clear winner since it has more applicable use cases and has less opportunity for secret keys to get stolen. HMAC does have the advantage of having smaller token sizes and requires less computational time to validate signatures which translates to better performance. If you are in full control over both the server and the client applications, the risk of secret keys getting stolen will probably be mitigated. If this is the case and performance is a big factor, HMAC is a good candidate. In most other cases I would favor RSA.\"])), (_l()(), i0.Éµeld(77, 0, null, 0, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"Example implementations of RSA/HMAC are RS256 and HS256, which make use of SHA-256. For longer keys, use implementations with SHA-384 or SHA-512.\"])), (_l()(), i0.Éµeld(79, 0, null, 0, 2, \"h3\", [], null, null, null, null, null)), (_l()(), i0.Éµeld(80, 0, null, null, 1, \"i\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"Further reading\"])), (_l()(), i0.Éµeld(82, 0, null, 0, 4, \"p\", [], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"This post focused on a high level explanation on purpose, leaving out the mathematical reasoning to better men. If you are left wondering how the public/private key pairs works, I recommend \"])), (_l()(), i0.Éµeld(84, 0, null, null, 1, \"a\", [[\"href\", \"https://www.comparitech.com/blog/information-security/rsa-encryption/\"]], null, null, null, null, null)), (_l()(), i0.Éµted(-1, null, [\"this post\"])), (_l()(), i0.Éµted(-1, null, [\".\"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.postTitle(); var currVal_1 = _co.postDate(); var currVal_2 = _co.postAbstract(); _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2); var currVal_4 = \"-----BEGIN RSA PRIVATE KEY-----\\nMIIBOwIBAAJBAJTiKVtSDSrTAdYhHEA/1rEzJ4RQHEEdcPeZdmZSSHborXbEy4c5\\n7g+k/b/c67KGDTfSoCj8T3L9OpnZd+SxTocCAwEAAQJAA2A1a9qqbcQnEIHjsBlC\\ndvYf+UIPwfI284ZJRvyqo/eNsjjMzuBbyD5GHwUxXSjvDb1Hrr8W+fGw8+6x9nWq\\nMQIhAOOMkZbBnDAZAL61Er5faOzPU0Lsa7mlMDYjJKy9QZylAiEAp3+mG6zzxA/I\\ntKetg2azqGOdyLs5znn13T/7yevkursCIQCckrHvISO+uMWZc/EEy5PgNryc9R8e\\n67pj1gS7U7Kc/QIgKOMyK0NW5h9sQR1Fb/QcGxjmJV/+xnZjHDVIQ4w/840CIQC+\\n88uVWV4dU3dsdcaoHaO08ZDKHETSZXifFTs4gJ0+JA==\\n-----END RSA PRIVATE KEY-----\"; _ck(_v, 15, 0, currVal_4); var currVal_6 = \"-----BEGIN PUBLIC KEY-----\\nMFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJTiKVtSDSrTAdYhHEA/1rEzJ4RQHEEd\\ncPeZdmZSSHborXbEy4c57g+k/b/c67KGDTfSoCj8T3L9OpnZd+SxTocCAwEAAQ==\\n-----END PUBLIC KEY-----\"; _ck(_v, 20, 0, currVal_6); }, function (_ck, _v) { var currVal_3 = true; _ck(_v, 14, 0, currVal_3); var currVal_5 = true; _ck(_v, 19, 0, currVal_5); }); }\nexport function View_RsHsComponent_Host_0(_l) { return i0.Éµvid(0, [(_l()(), i0.Éµeld(0, 0, null, null, 1, \"app-rs-hs\", [], null, null, null, View_RsHsComponent_0, RenderType_RsHsComponent)), i0.Éµdid(1, 49152, null, 0, i5.RsHsComponent, [], null, null)], null, null); }\nvar RsHsComponentNgFactory = i0.Éµccf(\"app-rs-hs\", i5.RsHsComponent, View_RsHsComponent_Host_0, {}, {}, []);\nexport { RsHsComponentNgFactory as RsHsComponentNgFactory };\n","<app-blog-post\r\n    [postTitle]=\"postTitle()\"\r\n    [postDate]=\"postDate()\"\r\n    [postAbstract]=\"postAbstract()\">\r\n\r\n    <p>RSA and HMAC are cryptographic algorithms that can scramble data into something indecipherable. This article\r\n        will highlight how they work, what their differences are and some use cases in which to use them without\r\n        delving into the mathematical aspects.</p>\r\n\r\n    <h3>RSA</h3>\r\n\r\n    <p>RSA is an asymmetric algorithm that uses a public and private\r\n        key pair. As the names suggest, the private key is kept secret from most parties while the public key is public\r\n        for everyone to use. The following shows an example with RS512, generated <a\r\n            href=\"https://travistidwell.com/jsencrypt/demo/\">online</a>:</p>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <pre><code [highlight]=\"\r\n    '-----BEGIN RSA PRIVATE KEY-----\r\nMIIBOwIBAAJBAJTiKVtSDSrTAdYhHEA/1rEzJ4RQHEEdcPeZdmZSSHborXbEy4c5\r\n7g+k/b/c67KGDTfSoCj8T3L9OpnZd+SxTocCAwEAAQJAA2A1a9qqbcQnEIHjsBlC\r\ndvYf+UIPwfI284ZJRvyqo/eNsjjMzuBbyD5GHwUxXSjvDb1Hrr8W+fGw8+6x9nWq\r\nMQIhAOOMkZbBnDAZAL61Er5faOzPU0Lsa7mlMDYjJKy9QZylAiEAp3+mG6zzxA/I\r\ntKetg2azqGOdyLs5znn13T/7yevkursCIQCckrHvISO+uMWZc/EEy5PgNryc9R8e\r\n67pj1gS7U7Kc/QIgKOMyK0NW5h9sQR1Fb/QcGxjmJV/+xnZjHDVIQ4w/840CIQC+\r\n88uVWV4dU3dsdcaoHaO08ZDKHETSZXifFTs4gJ0+JA==\r\n-----END RSA PRIVATE KEY-----'\">\r\n    </code></pre>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <pre><code [highlight]=\"\r\n    '-----BEGIN PUBLIC KEY-----\r\nMFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJTiKVtSDSrTAdYhHEA/1rEzJ4RQHEEd\r\ncPeZdmZSSHborXbEy4c57g+k/b/c67KGDTfSoCj8T3L9OpnZd+SxTocCAwEAAQ==\r\n-----END PUBLIC KEY-----'\">\r\n    </code></pre>\r\n        </div>\r\n    </div>\r\n\r\n    <p><i>I strongly advise against using online tools to generate public/private keys for use in production!</i></p>\r\n\r\n    <p>The public key can be used to encrypt a message which the private key can decrypt. The inverse also works:\r\n        private key for encryption and public key for decryption! This is confusing for some because RSA is an\r\n        asymmetric algorithm, but the meaning of an asymmetric algorithm is interpreted the wrong way. RSA is asymmetric\r\n        because different keys are used for encryption and decryption, as\r\n        opposed to symmetric algorithms where the same key is used. The bidirectional encryption/decryption allows RSA\r\n        to be used in different scenarios. Let's see:</p>\r\n\r\n    <h5>Encryption</h5>\r\n\r\n    <p>RSA can be used for encryption of data. Take for example a server which clients can make requests to. Anyone can\r\n        communicate with the server, but the messages may contain sensitive data such as passwords.\r\n        Man-in-the-middle-attacks may intercept ongoing network traffic, so the data should be indecipherable by\r\n        everyone except the intended recipient which is the server. The server can generate a\r\n        public/private key pair to solve this problem.</p>\r\n\r\n    <p>The public key gets distributed to anyone accessing the server. Visitors encrypt their data with the\r\n        public key and send it to the server. The server uses the private key to decrypt the message and access the\r\n        contents. Even if a third party managed to intercept the message over the network, it is useless\r\n        without the private key to restore the original data.</p>\r\n\r\n    <figure>\r\n        <img class=\"img-fluid rounded width--7\" src=\"assets/images/rsa_public_private_key.png\" alt=\"\">\r\n        <figcaption>Public/private key encryption\r\n            <small>- source: twilio.com</small>\r\n        </figcaption>\r\n    </figure>\r\n\r\n    <p>Using another example, say two people wish to communicate with each other using encrypted messages. Both parties\r\n        can generate their own public/private key pairs and exchange\r\n        public keys. This achieves the same situation as the server/client example, except this time they are both\r\n        the sender and receiver of messages. Person A uses the public key of person B to encrypt data and send them\r\n        to person B. Person B uses his own private key to decrypt the message sent by person A. In this transaction\r\n        only the public/private key pair of person B is involved. The same reasoning holds when person B becomes the\r\n        sender, by using person A's public/private key pair.</p>\r\n\r\n    <h5>Authenticity validation</h5>\r\n\r\n    <p>RSA is not only useful for encryption, but it can also be used for validating the authenticity of a message.\r\n        The intent is very different from the encryption of data in the previous examples. In this case everyone is\r\n        authorized to view the message contents, but they are not allowed to <i>modify</i> it.</p>\r\n\r\n    <p>The private key is this time known only by the sender instead of the receiver, so the public/private key pair\r\n        needs to be generated by the sender. The public key is again openly available to everyone else. The sender\r\n        encrypts the message with the private key and attaches it to the original plain text message as a\r\n        <i>signature</i>. Using the generated public/private key pair above, it will look something like this:</p>\r\n\r\n    <figure>\r\n        <img class=\"img-fluid rounded width--8\" src=\"assets/images/rsa_signature.png\" alt=\"\">\r\n        <figcaption>Signature example using <a\r\n            href=\"https://8gwifi.org/RSAFunctionality?rsasignverifyfunctions=rsasignverifyfunctions&keysize=512\">online\r\n            tool</a>\r\n        </figcaption>\r\n    </figure>\r\n\r\n    <p>Any modification made to the message will invalidate the accompanying signature. With the public key the\r\n        invalid signature can be detected and the message deemed compromised.</p>\r\n\r\n    <h3>HMAC</h3>\r\n\r\n    <p>HMAC is more simplistic in nature. There is just one (secret) key which is used to create a hash from a message,\r\n        but there is no way to decrypt the hashed output to its original form. This makes HMAC unsuitable for the\r\n        encryption of data. It is mainly used for authenticity validation by generating a hash from a message, which\r\n        becomes the signature similar to RSA. The receiver of the message uses the <i>same</i> key to generate a\r\n        hash from the message contents and compares it with the accompanying signature. The authenticity of the message\r\n        is preserved when the hash matches the signature.</p>\r\n\r\n    <p>Since the receiver needs the key to validate the signature, special care must be taken to ensure it does not\r\n        fall in the hands of any third parties. If the key gets stolen then the attacker can modify the message\r\n        contents and use the key to generate a new and <b>valid</b> signature.</p>\r\n\r\n    <h3>Comparison RSA and HMAC</h3>\r\n\r\n    <p>One may believe that RSA is the clear winner since it has more applicable use cases and has less opportunity for\r\n        secret keys to get stolen. HMAC does have the advantage of having smaller token sizes and requires less\r\n        computational time to validate signatures which translates to better performance. If you are in full control\r\n        over both the server and the client applications, the risk of secret keys getting stolen will probably be\r\n        mitigated. If this is the case and performance is a big factor, HMAC is a good candidate. In most other\r\n        cases I would favor RSA.</p>\r\n\r\n    <p>Example implementations of RSA/HMAC are RS256 and HS256, which make use of SHA-256. For longer keys, use\r\n        implementations with SHA-384 or SHA-512.</p>\r\n\r\n\r\n    <h3><i>Further reading</i></h3>\r\n\r\n    <p>This post focused on a high level explanation on purpose, leaving out the mathematical reasoning to better men.\r\n        If you are left wondering how the public/private key pairs works, I recommend\r\n        <a href=\"https://www.comparitech.com/blog/information-security/rsa-encryption/\">this post</a>.</p>\r\n</app-blog-post>\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./developer-blog.module\";\nimport * as i2 from \"../../../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i3 from \"./developer-blog.component.ngfactory\";\nimport * as i4 from \"./post/rs-hs.component.ngfactory\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"../../../shared/blog-sidebar/category/blog-sidebar-category.module\";\nimport * as i9 from \"../../../shared/blog-sidebar/search/blog-sidebar-search.module\";\nimport * as i10 from \"../../../shared/blog-sidebar/blog-sidebar.module\";\nimport * as i11 from \"../../../shared/blog-overview/blog-overview.module\";\nimport * as i12 from \"../../../shared/blog-post/blog-post.module\";\nimport * as i13 from \"../../../shared/shared.module\";\nimport * as i14 from \"./developer-blog-routing.module\";\nimport * as i15 from \"ngx-highlightjs\";\nimport * as i16 from \"./developer-blog.component\";\nimport * as i17 from \"./post/rs-hs.component\";\nvar DeveloperBlogModuleNgFactory = i0.Éµcmf(i1.DeveloperBlogModule, [], function (_l) { return i0.Éµmod([i0.Éµmpd(512, i0.ComponentFactoryResolver, i0.ÉµCodegenComponentFactoryResolver, [[8, [i2.Éµangular_packages_router_router_lNgFactory, i3.DeveloperBlogComponentNgFactory, i4.RsHsComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.Éµmpd(4608, i5.NgLocalization, i5.NgLocaleLocalization, [i0.LOCALE_ID, [2, i5.Éµangular_packages_common_common_a]]), i0.Éµmpd(4608, i6.Éµangular_packages_forms_forms_o, i6.Éµangular_packages_forms_forms_o, []), i0.Éµmpd(1073742336, i5.CommonModule, i5.CommonModule, []), i0.Éµmpd(1073742336, i7.RouterModule, i7.RouterModule, [[2, i7.Éµangular_packages_router_router_a], [2, i7.Router]]), i0.Éµmpd(1073742336, i8.BlogSidebarCategoryModule, i8.BlogSidebarCategoryModule, []), i0.Éµmpd(1073742336, i6.Éµangular_packages_forms_forms_d, i6.Éµangular_packages_forms_forms_d, []), i0.Éµmpd(1073742336, i6.FormsModule, i6.FormsModule, []), i0.Éµmpd(1073742336, i9.BlogSidebarSearchModule, i9.BlogSidebarSearchModule, []), i0.Éµmpd(1073742336, i10.BlogSidebarModule, i10.BlogSidebarModule, []), i0.Éµmpd(1073742336, i11.BlogOverviewModule, i11.BlogOverviewModule, []), i0.Éµmpd(1073742336, i12.BlogPostModule, i12.BlogPostModule, []), i0.Éµmpd(1073742336, i13.SharedModule, i13.SharedModule, []), i0.Éµmpd(1073742336, i14.DeveloperBlogRoutingModule, i14.DeveloperBlogRoutingModule, []), i0.Éµmpd(1073742336, i15.HighlightModule, i15.HighlightModule, []), i0.Éµmpd(1073742336, i1.DeveloperBlogModule, i1.DeveloperBlogModule, []), i0.Éµmpd(1024, i7.ROUTES, function () { return [[{ path: \"\", component: i16.DeveloperBlogComponent }, { path: \"rs-hs\", data: i14.Éµ0, component: i17.RsHsComponent }]]; }, []), i0.Éµmpd(256, \"DEV_ROUTES\", i1.Éµ0, [])]); });\nexport { DeveloperBlogModuleNgFactory as DeveloperBlogModuleNgFactory };\n"]}